require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require File.join(File.dirname(`node --print "require.resolve('expo/package.json')"`), "scripts/autolinking")


platform :ios, '13.0'
install! 'cocoapods', :deterministic_uuids => false

target 'KidzNMotion_iOS' do
  use_expo_modules!
  config = use_native_modules!

  # Flags change depending on the env values.
  flags = get_default_flags()

  # Firebase
  pod 'FBReactNativeSpec', :path => "../node_modules/react-native/React/FBReactNativeSpec"
  pod 'RNFirebase', :path => '../node_modules/react-native-firebase/ios'
# 

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    # Upcoming versions of React Native may rely on get_default_flags(), but
    # we make it explicit here to aid in the React Native upgrade process.
    :hermes_enabled => true,
    :fabric_enabled => flags[:fabric_enabled],
    # Enables Flipper.
    #
    # Note that if you have use_frameworks! enabled, Flipper will not work and
    # you should disable the next line.
    :flipper_configuration => FlipperConfiguration.enabled,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'KidzNMotion_iOSTests' do
    inherit! :complete
    # Pods for testing
  end

  # Firebase
    pod 'PushNotifications', :modular_headers => true
    pod 'Firebase/Messaging', :modular_headers => true
    pod 'Firebase/Crashlytics', :modular_headers => true
    pod 'Firebase/Analytics', :modular_headers => true
    pod 'FirebaseCoreInternal', :modular_headers => true
    pod 'FirebaseCore', :modular_headers => true
    pod 'Firebase', :modular_headers => true
    pod 'GoogleUtilities', :modular_headers => true
  # 

  post_install do |installer|
    react_native_post_install(
      installer,
      # Set `mac_catalyst_enabled` to `true` in order to apply patches
      # necessary for Mac Catalyst builds
      :mac_catalyst_enabled => false
    )
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
  end
end
